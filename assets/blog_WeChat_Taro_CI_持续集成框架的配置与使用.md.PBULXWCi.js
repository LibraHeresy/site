import{P as a}from"./chunks/PreviewImage.D8DdpuMi.js";import{c as l,o as p,ah as t,G as e,j as i,a as n}from"./chunks/framework.CokR5C85.js";import"./chunks/theme.CUaAWteN.js";const c=JSON.parse('{"title":"Taro CI 持续集成框架的配置与使用","description":"","frontmatter":{},"headers":[],"relativePath":"blog/WeChat/Taro_CI_持续集成框架的配置与使用.md","filePath":"blog/WeChat/Taro_CI_持续集成框架的配置与使用.md","lastUpdated":1742288185000}'),h={name:"blog/WeChat/Taro_CI_持续集成框架的配置与使用.md"},E=Object.assign(h,{setup(r){return(k,s)=>(p(),l("div",null,[s[0]||(s[0]=t('<h1 id="taro-ci-持续集成框架的配置与使用" tabindex="-1">Taro CI 持续集成框架的配置与使用 <a class="header-anchor" href="#taro-ci-持续集成框架的配置与使用" aria-label="Permalink to &quot;Taro CI 持续集成框架的配置与使用&quot;">​</a></h1><h2 id="痛点" tabindex="-1">痛点 <a class="header-anchor" href="#痛点" aria-label="Permalink to &quot;痛点&quot;">​</a></h2><p>使用 <code>Taro</code> 跨端框架开发小程序时，需要切换三个界面，进行三次操作，才能上传成功，上传代码步骤过于繁琐。</p><p>且多人开发时，如果想让自己代码生效，需要切换体验版代码为自己上传的版本。</p><blockquote><p>vscode 打包 -&gt; 微信开发者工具上传 -&gt; 设置为体验版</p></blockquote><h2 id="方案" tabindex="-1">方案 <a class="header-anchor" href="#方案" aria-label="Permalink to &quot;方案&quot;">​</a></h2><p>使用微信官方的 <code>CI</code> 插件包，即可实现命令行上传代码。</p><p>因为我使用的 <code>Taro</code> 本身就有 <code>Taro CI</code>，和 <code>Taro</code> 一样兼容了各个小程序平台，所以直接使用 <code>Taro</code> 提供的即可。</p><blockquote><p>配置上传信息 -&gt; vscode 命令行打包上传</p></blockquote><p><code>Taro CI</code> 完美解决我的痛点，而且因为是机器人上传，所以大家代码都可以上传到同一个体验版内，也不用切换界面，vscode 终端一行命令就可以完成打包上传操作。</p><h2 id="环境" tabindex="-1">环境 <a class="header-anchor" href="#环境" aria-label="Permalink to &quot;环境&quot;">​</a></h2><blockquote><p>node: v14.17.3</p><p>Taro: v3.0.21</p><p>Taro CI: v3.5.3</p></blockquote><h2 id="实现" tabindex="-1">实现 <a class="header-anchor" href="#实现" aria-label="Permalink to &quot;实现&quot;">​</a></h2><h3 id="安装-tarojs-plugin-mini-ci" tabindex="-1">安装 <code>tarojs/plugin-mini-ci</code> <a class="header-anchor" href="#安装-tarojs-plugin-mini-ci" aria-label="Permalink to &quot;安装 `tarojs/plugin-mini-ci`&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yarn </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @tarojs/plugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mini</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ci </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D</span></span></code></pre></div><p>或</p><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm i @tarojs/plugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mini</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ci </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D</span></span></code></pre></div><h3 id="配置参数" tabindex="-1">配置参数 <a class="header-anchor" href="#配置参数" aria-label="Permalink to &quot;配置参数&quot;">​</a></h3><p>按照官方文档配置本地参数就可以了</p><p><a href="https://taro-docs.jd.com/docs/plugin-mini-ci" target="_blank" rel="noreferrer">Taro CI 官方文档</a></p><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="打包报错" tabindex="-1">打包报错 <a class="header-anchor" href="#打包报错" aria-label="Permalink to &quot;打包报错&quot;">​</a></h3><p>UnhandledPromiseRejectionWarning: TypeError: Cannot read property &#39;platform&#39; of undefined</p>',23)),e(a,{desc:"错误图",imageUrl:"https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/images/blog/202305291522436.png"}),s[1]||(s[1]=t(`<p>此报错的原因是插件本身取值对象有问题，所以我们需要修改它的取值对象。</p><p><code>文件路径：node_modules\\@tarojs\\plugin-mini-ci\\dist\\index.js 51行</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> platform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ctx.runOpts.options.platform;</span></span></code></pre></div><p>修改为</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> platform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ctx.runOpts.platform;</span></span></code></pre></div><h3 id="申请插件权限" tabindex="-1">申请插件权限 <a class="header-anchor" href="#申请插件权限" aria-label="Permalink to &quot;申请插件权限&quot;">​</a></h3><p>插件安装以后是不能直接使用的（有时候也可以。。。），需要申请插件权限，需要用到 <code>PostMan</code> 等可以模拟请求的工具。</p><p><a href="https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/plugin-management/managePlugin.html" target="_blank" rel="noreferrer">向插件开发者发起使用插件的申请</a></p><h4 id="_1-获取-access-token" tabindex="-1">1. 获取 <code>access_token</code> <a class="header-anchor" href="#_1-获取-access-token" aria-label="Permalink to &quot;1. 获取 \`access_token\`&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 请求方式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GET&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 请求地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.weixin.qq.com/cgi-bin/token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 请求参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  param: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    grant_type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;client_credential&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 固定值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    appid: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 小程序 id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    secret: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 小程序密钥</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 示例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  example:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=123&amp;secret=123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h4 id="_2-申请插件权限" tabindex="-1">2. 申请插件权限 <a class="header-anchor" href="#_2-申请插件权限" aria-label="Permalink to &quot;2. 申请插件权限&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 请求方式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 请求地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.weixin.qq.com/wxa/plugin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 请求参数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  param: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    access_token: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;client_credential&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// token</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    action: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apply&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 固定值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    plugin_appid: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 小程序 id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="ip-白名单" tabindex="-1">IP 白名单 <a class="header-anchor" href="#ip-白名单" aria-label="Permalink to &quot;IP 白名单&quot;">​</a></h3><p>有时候会提示 ip 地址非法，是因为小程序默认开启了 <code>ip</code> 白名单，所以不能上传。这时候就需要添加 <code>ip</code> 地址到白名单或者关闭白名单。</p><p>在这推荐的是关闭白名单，因为添加 <code>ip</code> 白名单需要管理员权限，这是安全与效率的取舍。</p>`,15)),e(a,{desc:"开发管理",imageUrl:"https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/images/blog/202305291522352.png"}),e(a,{desc:"开发设置",imageUrl:"https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/images/blog/202305291522782.png"}),e(a,{desc:"IP 白名单",imageUrl:"https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/images/blog/202305291522228.png"}),s[2]||(s[2]=i("h3",{id:"关于其他参数配置",tabindex:"-1"},[n("关于其他参数配置 "),i("a",{class:"header-anchor",href:"#关于其他参数配置","aria-label":'Permalink to "关于其他参数配置"'},"​")],-1)),s[3]||(s[3]=i("p",null,[n("因为 "),i("code",null,"Taro CI"),n(" 就是各家小程序持续集成插件的封装，所以各个小程序的配置参数理论上都可以使用，但是因为 "),i("code",null,"Taro CI"),n(" 并没有开放出来，所以当我们有自定义需求时，只能直接修改插件包。")],-1)),s[4]||(s[4]=i("p",null,[i("a",{href:"https://developers.weixin.qq.com/miniprogram/dev/devtools/ci.html",target:"_blank",rel:"noreferrer"},"微信小程序 CI 文档")],-1)),s[5]||(s[5]=i("p",null,"比如我们给微信小程序添加一个压缩参数：",-1)),e(a,{desc:"小程序参数配置",imageUrl:"https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/images/blog/202305291523909.png"}),e(a,{desc:"编译配置",imageUrl:"https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/images/blog/202305291523360.png"}),e(a,{desc:"压缩配置",imageUrl:"https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/images/blog/202305291523272.png"}),s[6]||(s[6]=i("p",null,[n("我们可以看到小程序官方 "),i("code",null,"CI"),n(" 的配置数据结构，接下来我们看看 "),i("code",null,"Taro CI"),n(" 的：")],-1)),s[7]||(s[7]=i("p",null,[i("code",null,"文件路径：node_modules\\@tarojs\\plugin-mini-ci\\dist\\WeappCI.js")],-1)),e(a,{desc:"Taro CI 参数配置",imageUrl:"https://gcore.jsdelivr.net/gh/LibraHeresy/BaiduNetDisk/images/blog/202305291523799.png"}),s[8]||(s[8]=i("p",null,"简直是一模一样，所以我直接把我需要的配置写入，测试成功。",-1))]))}});export{c as __pageData,E as default};
